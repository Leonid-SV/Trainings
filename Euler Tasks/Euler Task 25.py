'''Последовательность Фибоначчи определяется рекурсивным правилом:

Fn = Fn−1 + Fn−2, где F1 = 1 и F2 = 1.
Таким образом, первые 12 членов последовательности равны:

F1 = 1
F2 = 1
F3 = 2
F4 = 3
F5 = 5
F6 = 8
F7 = 13
F8 = 21
F9 = 34
F10 = 55
F11 = 89
F12 = 144
Двенадцатый член F12 - первый член последовательности, который содержит три цифры.

Каков порядковый номер первого члена последовательности Фибоначчи, содержащего 1000 цифр?
'''

import math
from time import time

# число цифр
nn = 1000

# Последовательность Фибоначчи
def fibo(n):
    a, b = 0, 1
    for __ in range(n): a, b = b, a + b
    return a

def find_long_m(n):
    k = 1
    f_k = 0
    while f_k < n:
        fibo_k = fibo(k)
        f_k = len(str(fibo_k))
        k += 1
    return [k, fibo_k]

t1 = time()
answ = find_long_m(nn)[0]
print("порядковый номер первого члена последовательности Фибоначчи, содержащего ", nn, " цифр равоно ", answ)
t2 = time()
print("время выполнения", t2 - t1)


